<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.powernode.mybatis.mapper.CarMapper">

    <!--
        foreach 標籤的屬性：
            (1) collection: 指定陣列或者集合
            (2) item: 代表陣列或者集合中的元素
            (3) separator: 循環之間的分隔符
            (4) open: foreach 循環拼接的所有 sql 語句的最前面以什麼開始
            (5) close: foreach 循環拼接的所有 sql 語句的最後面以什麼結束
        collection="ids" 第一個寫這個的時候報錯了，錯誤信息是：[array, arg0]
        什麼意思？
            map.put("array", 陣列);
            map.put("arg0", 陣列);
    -->
    <delete id="deleteByIds">
        <!--
        DELETE FROM
            car 
        WHERE 
            id
        IN(
        <foreach collection="ids" item="id" separator=",">
            #{id}
        </foreach>
        )
        -->

        DELETE FROM
            car
        WHERE
            id
        IN
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
    
    <select id="selectByChoose" resultType="car">
        SELECT
            *
        FROM
            car
        <where>
            <choose>
                <when test="brand != null and brand != ''">
                    brand LIKE CONCAT('%', #{brand}, '%')
                </when>
                <when test="guidePrice != null and guidePrice != ''">
                    guide_price &gt; #{guidePrice}
                </when>
                <otherwise>
                    car_type = #{carType}
                </otherwise>
            </choose>
        </where>
    </select>

    <update id="updateBySet">
        UPDATE
            car
        <set>
            <if test="carNum != null and carNum != ''">car_num = #{carNum},</if>
            <if test="brand != null and brand != ''">brand = #{brand},</if>
            <if test="guidePrice != null and guidePrice != ''">guide_price = #{guidePrice},</if>
            <if test="produceTime != null and produceTime != ''">produce_time = #{produceTime},</if>
            <if test="carType != null and carType != ''">car_type = #{carType}</if>
        </set>
        WHERE
            id = #{id}
    </update>


    <update id="updateById">
        UPDATE
            car
        SET
            car_num = #{carNum},
            brand = #{brand},
            guide_price = #{guidePrice},
            produce_time = #{produceTime},
            car_type = #{carType}
        WHERE
            id = #{id}
    </update>

    <select id="selectByMultiConditionWithTrim" resultType="car">
        SELECT
            *
        FROM
            car
        <!--
            prefix: 加前綴
            prefixOverrides: 去掉（刪除）前綴
            suffix: 加後綴
            suffixOverrides: 去掉（刪除）後綴
        -->
        <!-- prefix="where" 是在 trim 標籤的所有內容的前面添加 where -->
        <!-- suffixOverrides="and|or" 把 trim 標籤中內容的後綴 and 或 or 去掉 -->
        <trim prefix="where" suffixOverrides="and|or">
            <if test="brand != null and brand != ''">
                brand LIKE CONCAT('%', #{brand}, '%') AND
            </if>
            <if test="guidePrice != null and guidePrice != ''">
                guide_price &gt; #{guidePrice} AND
            </if>
            <if test="carType != null and carType != ''">
                car_type = #{carType}
            </if>
        </trim>
    </select>

    <select id="selectByMultiConditionWithWhere" resultType="car">
        SELECT
            *
        FROM
            car
        <!-- where 標籤是專門負責 where 子句動態生成的 -->
        <where>
            <if test="brand != null and brand != ''">
                AND brand LIKE CONCAT('%', #{brand}, '%')
            </if>
            <if test="guidePrice != null and guidePrice != ''">
                AND guide_price &gt; #{guidePrice}
            </if>
            <if test="carType != null and carType != ''">
                AND car_type = #{carType}
            </if>
        </where>
    </select>

    <select id="selectByMultiCondition" resultType="car">
        SELECT
            *
        FROM
            car
        WHERE 1 = 1
        <!--
            1. if 標籤中的 test 屬性是必須的。
            2. if 標籤中的 test 屬性的值是 false 或者 true。
            3. 如果 test 是 true，則 if 標籤中的 sql 語句就會拼接。反之，則不會拼接。
            4. test 屬性的中可以使用的是：
               -> 當使用 @Param 註解，那麼 test 中要出現的是 @Param 註解指定的參數名。@Param("brand")，那麼這邊只能使用 brand
               -> 當沒有使用 @Param 註解，那麼 test 中要出現的是：param1 or param2 or param3 or arg0 or arg1 or arg2 ...
               -> 當使用了 POJO，那麼 test 中出現的是 POJO 類的屬性名。
           5. 在 mybatis 的動態 SQL 當中，不能使用 &&，只能使用 and。
         -->
        <if test="brand != null and brand != ''">
            AND brand LIKE CONCAT('%', #{brand}, '%')
        </if>
        <if test="guidePrice != null and guidePrice != ''">
            AND guide_price &gt; #{guidePrice}
        </if>
        <if test="carType != null and carType != ''">
            AND car_type = #{carType}
        </if>
    </select>

</mapper>