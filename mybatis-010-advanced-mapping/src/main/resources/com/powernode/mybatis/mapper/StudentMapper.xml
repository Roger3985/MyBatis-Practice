<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.powernode.mybatis.mapper.StudentMapper">

    <!--
        * 分步查詢的優點：
            第一：複用性增強，可以重複利用。（大步拆成 N 多個小碎步。每一個小碎步更加可以重複利用。）
            第二：採用這種的分步查詢，可以充分利用他們的延遲加載/延遲加載（懶加載）機制
        * 什麼是延遲加載（懶加載），有什麼用？
            延遲加載的核心原理：用的時候再執行查詢語氣。不用的時候不查詢。
            作用：提高性能。
        * 在 mybatis 當中怎麼開啟延遲延遲？
            Ans: association 標籤中添加 fetchType="lazy"
            注意：默認情況下是沒有開啟延遲加載的，需要設置：fetchType="lazy"
            這種在 association 標籤中配置 fetchType="lazy" 是局部的設置，只對當前的 association 關聯的 sql 語句起作用。
        * 在實際的開發中，大部分都是需要使用延遲加載，所以建議開啟的全局加載機制：
            在 mybatis 核心配置文件中添加全局配置：lazyLoadingEnabled=true
        * 實際開發中的模式：
            把全局的延遲加載打開。
            如果某一步不需要使用延遲加載，請設置：fetchType="eager"

          -> 其他的 select 會跟迪卡爾機
             3 * 4 = 3 * 4（需要執行 12 次：效能較差）
    -->
    <!-- 兩條 SQL 語句。完成多對一的分步查詢。 -->
    <!-- 這裡是第一步：根據學生的 id 查詢學生的 id，查詢學生的所有信息。這些信息當中含有班級 id(cid) -->
    <resultMap id="studentResultMapByStep" type="Student">
        <id property="sid" column="sid"/>
        <result property="sname" column="sname"/>
        <association property="clazz"
                     select="com.powernode.mybatis.mapper.ClazzMapper.selectByIdStep2"
                     column="cid"
                     fetchType="eager"/>
    </resultMap>

    <select id="selectByIdStep1" resultMap="studentResultMapByStep">
        SELECT
            sid, sname, cid
        FROM
            t_stu
        WHERE
            sid = #{sid}
    </select>

    <!-- 一條 SQL 語句：association -->
    <resultMap id="studentResultMapAssociation" type="Student">
        <id property="sid" column="sid"/>
        <result property="sname" column="sname"/>
        <!--
            association：翻譯為關聯。一個 Student 物件關聯一個 Clazz 物件。
            property：提供要映射的 POJO 類的屬性名。
            javaType：用來指定要映射的 java 類型。
        -->
        <association property="clazz" javaType="Clazz">
            <id property="cid" column="cid"/>
            <result property="cname" column="cname"/>
        </association>
    </resultMap>

    <select id="selectByIdAssociation" resultMap="studentResultMapAssociation">
        SELECT
            s.sid, s.sname, c.cid, c.cname
        FROM
            t_stu s left join t_clazz c on s.cid = c.cid
        WHERE
            s.sid = #{sid}
    </select>

    <!-- 多對一映射的第一種方式：一條 SQL 語句，級聯屬性映射 -->
    <resultMap id="studentResultMap" type="student">
        <id property="sid" column="sid"/>
        <result property="sname" column="sname"/>
        <result property="clazz.cid" column="cid"/>
        <result property="clazz.cname" column="cname"/>
    </resultMap>

    <select id="selectById" resultMap="studentResultMap">
        SELECT
            s.sid, s.sname, c.cid, c.cname
        FROM
            t_stu s left join t_clazz c on s.cid = c.cid
        WHERE
            s.sid = #{sid}
    </select>
</mapper>