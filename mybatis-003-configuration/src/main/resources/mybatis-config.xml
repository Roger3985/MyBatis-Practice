<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!-- java.util.Properties 類。是一個 Map 集合。key and value 都是 String 類型 -->
    <!-- 在 properties 標籤中可以配置很多的屬性 -->
    <!-- <properties>
        <property name="jdbc.driver" value="org.postgresql.Driver"/>
        <property name="jdbc.url" value="jdbc:postgresql://localhost:5433/postgres"/>
        <property name="jdbc.username" value="postgres"/>
        <property name="jdbc.password" value="mysecretpassword"/>
    </properties> -->

    <!-- resource 一定是從類路徑開始查找資源 -->
    <properties resource="jdbc.properties"/>
    <!-- url 是透過絕對路徑下去查找資源 -->
    <!-- 從絕對路徑當中加載資源，絕對路徑怎麼寫？ file:///路徑 -->
    <!-- <properties url="file:///d:/jdbc.properties"/> -->

    <!-- default 表示默認使用的環境。 -->
    <!-- 默認環境什麼意思？當你使用 mybatis 創建 SqlSessionFactory 物件時，沒有指定環境的話，默認使用哪個環境 -->
    <environments default="powernodeDB">

        <!-- 其中一個環境，連接的資料庫是 postgres -->
        <!-- 一般一個資料庫會對應一個 SqlSessionFactory 物件 -->
        <!-- 一個環境 environment 會對應一個 SqlSessionFactory 物件 -->
        <environment id="powernodeDB">
            <!--
            transactionManager 標籤：
                1. 作用：配置交易管理器。指定 mybatis 具體使用什麼方式去管理交易。
                2. type 屬性有兩個值：
                   (1) 第一個：JDBC：使用原生的 JDBC 程式碼來管理交易
                       conn.setAutoCommit(false);
                       ......
                       conn.commit();
                   (2) 第二個：MANAGED：mybatis 不再負責交易的管理，將交易管理交給其它的 JEE(JavaEE) 容器來管理，例如：spring
                3. 大小寫無所謂。不區分大小寫。但是不能寫其他值，只能是二選一：
                   jdbc、managed
                4. 在 mybatis 中提供了一個交易管理器介面： Transaction
                   該介面下有兩個實現類：
                        JdbcTransaction
                        ManagedTransaction
                   如果 type="JDBC"，那麼底層會實例化 JdbcTransaction 物件。
                   如果 type="MANAGED"，那麼底層會實例化 ManagedTransaction 物件。
            -->
            <transactionManager type="JDBC"/>
            <!--
                dataSource 配置：
                    1. dataSource 被稱為資料源。
                    2. dataSource 作用是什麼？為程式提供 Connection 物件。（但凡是給程式提供 Connection 物件的，都叫做資料源。）
                    3. 資料源實際上是一套規範： JDK 中有這套規範： javax.sql.DataSource (這個資料源的規範，這套介面實際上是 JDK 規定的)
                    4. 我們自己也可以編寫資料源組件，只要實現 javax.sql.DataSource 介面就可以了。實現介面當中的所以方法。這樣就有了自己的資料源。
                       -> 比如你可以寫一個屬於自己的資料庫連接池（資料庫連接池是提供連接物件的，所以資料庫連接池就是一個資料源）。
                    5. 常見的資料源組件有哪些（常見的資料庫連接池有哪些呢？）
                       -> druid、HikariCP、c3p0...
                    6. type 屬性用來指定資料源的類型。就是指定具體使用什麼方式來獲取 Connection 物件：
                       -> type 屬性有三個值：必須是三選一
                          type="[UNPOOLED|POOLED|JNDI]"
                          UNPOOLED: 不使用資料庫連接池技術，每次請求過來之後，都是創建新的 Connection 物件。
                          POOLED: 使用 mybatis 自己實現的資料庫連接池。
                          JNDI: 集成其它第三方的資料庫連接池。

                          JNDI 是一套規範。誰實現了這套規範呢？大部分的 web 容器都實現了 JNDI 規範。
                               例如：Tomcat、Jetty、WebLogic、WebSphere，這些服務器（容器）都實現了 JNDI 規範。
                          JNDI 是： java 命名目錄介面。 Tomcat 服務器實現了這個規範。
             -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
                <!-- 提醒： 正常使用連接池的話，池中有很多參數需要設置的，設置好參數，可以讓連線池發揮得更好，事半功倍的效果。 -->
                <!-- 具體連接池當中的參數如何配置呢？ 需要反覆的根據當前的業務情況進行測試 -->
                <!-- poolMaximumActiveConnections：連接池當中最多的正在使用的連接池物件的數量上限。最多可以有多少個連接可以活動。默認值 10 -->
                <property name="poolMaximumActiveConnections" value="3"/>
                <!-- 每隔2秒打印日誌，並且嘗試獲取連接物件 -->
                <property name="poolTimeToWait" value="2000"/>
                <!-- 強行讓某個連接空閑，超時時間設置 -->
                <property name="poolMaximumCheckoutTime" value="10000"/>
                <!-- 最多的空閑數量 -->
                <property name="poolMaximumIdleConnections" value="5"/>
            </dataSource>
        </environment>

        <!-- 這是 mybatis 的另一個環境，也就是連接的資料庫是另一個資料庫 mybatis -->
        <environment id="mybatisDB">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="org.postgresql.Driver"/>
                <property name="url" value="jdbc:postgresql://localhost:5433/mybatis"/>
                <property name="username" value="postgres"/>
                <property name="password" value="mysecretpassword"/>
            </dataSource>
        </environment>
    </environments>
    <mappers>
        <mapper resource="CarMapper.xml"/>
    </mappers>
</configuration>